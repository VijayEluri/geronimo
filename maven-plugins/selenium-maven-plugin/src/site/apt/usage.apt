 ------
 Geronimo Selenium Plugin for Maven 2
 ------
 ???
 ------
 ???

Basic Usage

* Start Selenium Server (Integrated)

 For integration tests that need a Selenium server, use the <<<pre-integration-test>>>
 phase to start it up in the <background> to allow the <<<integration-test>>> phase to
 be executed with the server running.
 
 <<NOTE:>> Currently there is no <stop>, the forked JVM will exit when Maven does.
 
 This will by default create files under <<<$\{pom.basedir\}/target/selenium>>>, including:
 
  * <<<server.out>>>
  
  * <<<server.err>>>
  
  * <<<server.log>>>
  
  * <<<user-extensions.js>>> (if enabled)

+----------+
<plugin>
    <groupId>org.apache.geronimo.plugins</groupId>
    <artifactId>selenium-maven-plugin</artifactId>
    <executions>
        <execution>
            <id>start-selenium</id>
            <phase>pre-integration-test</phase>
            <goals>
                <goal>start</goal>
            </goals>
            <configuration>
                <background>true</background>
            </configuration>
        </execution>
    </executions>
</plugin>
+----------+

* Start Selenium Server (Standalone)

 To start Selenium on the command line, which is very useful while developing tests,
 simply execute the <<<start>>> goal.

 This will start the server and block until the server has been stopped, either
 from the process being killed, or more normally, until CTRL-C is used to exit
 Maven.

 This is the preferred mechanism to start the server standalone, as it will setup
 <<<user-extensions.js>>>.

+----------+
mvn selenium:start
+----------+

