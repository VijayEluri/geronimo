/**
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.apache.geronimo.tomcat.listener;

import org.apache.catalina.Lifecycle;
import org.apache.catalina.LifecycleEvent;
import org.apache.catalina.core.AprLifecycleListener;

/*
 * GeronimoAprLifecycleListener translates START_EVENT to INIT_EVENT
 * and STOP_EVENT to AFTER_STOP_EVENT for the AprLifecycleListener
 * so that the APR library is initialized correctly. The translation is
 * necessary as the INIT_EVENT and STOP_EVENT event are generated by Tomcat's 
 * StandardServer which is not present in this Tomcat integration code.
 */
public class GeronimoAprLifecycleListener extends AprLifecycleListener {

    @Override
    public void lifecycleEvent(LifecycleEvent event) {             
        if (Lifecycle.START_EVENT.equals(event.getType())) {
            event = new LifecycleEvent(event.getLifecycle(), 
                                       Lifecycle.INIT_EVENT,
                                       event.getData());
        } else if (Lifecycle.STOP_EVENT.equals(event.getType())) {
            event = new LifecycleEvent(event.getLifecycle(), 
                                       Lifecycle.AFTER_STOP_EVENT,
                                       event.getData());
        }
        
        super.lifecycleEvent(event);
    }
}
