<?xml version="1.0"?>

<!-- ================================================================== -->
<!-- Geronimo deployment plugin                                         -->
<!-- ================================================================== -->
<project xmlns:j="jelly:core"
    xmlns:u="jelly:util"
    xmlns:ant="jelly:ant"
    xmlns:maven="jelly:maven"
    xmlns:define="jelly:define"
    xmlns:velocity="jelly:velocity"
    xmlns:deploy="geronimo:deploy"
    >

    <define:taglib uri="geronimo:deploy">
        <define:jellybean
            name="distribute"
            className="org.apache.geronimo.deployment.mavenplugin.DistributeModule"
            method="execute"/>
        <define:jellybean
            name="start"
            className="org.apache.geronimo.deployment.mavenplugin.StartModule"
            method="execute"/>
        <define:jellybean
            name="stop"
            className="org.apache.geronimo.deployment.mavenplugin.StopModule"
            method="execute"/>
        <define:jellybean
            name="undeploy"
            className="org.apache.geronimo.deployment.mavenplugin.UndeployModule"
            method="execute"/>
        <define:jellybean
            name="startServer"
            className="org.apache.geronimo.deployment.mavenplugin.StartServer"
            method="execute"/>
        <define:jellybean
            name="startRemoteServer"
            className="org.apache.geronimo.deployment.mavenplugin.StartRemoteServer"
            method="execute"/>
        <define:jellybean
            name="waitForStarted"
            className="org.apache.geronimo.deployment.mavenplugin.WaitForStarted"
            method="execute"/>
        <define:jellybean
            name="stopServer"
            className="org.apache.geronimo.deployment.mavenplugin.StopServer"
            method="execute"/>
        <define:jellybean
            name="stopRemoteServer"
            className="org.apache.geronimo.deployment.mavenplugin.StopRemoteServer"
            method="execute"/>
        <define:jellybean
            name="velocityFilter"
            className="org.apache.geronimo.deployment.mavenplugin.VelocityFilter"/>
        <define:jellybean
            name="mergeWebXML"
            className="org.apache.geronimo.deployment.mavenplugin.MergeWebXML"
            method="execute"/>

        <define:tag name="unpackServer" xmlns="jelly:ant">
            <j:if test="${geronimoVersion == null}">
                <fail>Missing required attribute: geronimoVersion</fail>
            </j:if>
            <j:if test="${geronimoGroupId == null}">
                <j:set var="geronimoGroupId" value="geronimo"/>
            </j:if>
            <j:if test="${geronimoArtifactId == null}">
                <j:set var="geronimoArtifactId" value="geronimo"/>
            </j:if>
            <j:if test="${targetDir == null}">
                <j:set var="targetDir" value="${maven.build.dir}"/>
            </j:if>

            <unzip dest="${maven.build.dir}" src="${maven.repo.local}/${geronimoGroupId}/distributions/${geronimoArtifactId}-${geronimoVersion}.zip"/>

            <!--copy stuff for this project into new geronimo repository-->
            <!-- this code deals with jar overrides correctly -->
            <j:forEach var="artifact" items="${pom.artifacts}">
                <j:set var="dependency" value="${artifact.dependency}"/>
                <j:if test="${dependency.getProperty('repository') == 'true'}">
                    <j:set var="depDir" value="${geronimo.home}/repository/${dependency.getArtifactDirectory()}/${dependency.getType()}s"/>
                    <ant:mkdir dir="${depDir}"/>
                    <ant:copy tofile="${depDir}/${dependency.getArtifact()}" file="${artifact.path}"/>
                </j:if>
            </j:forEach>
            <deploy:copyVar/>
        </define:tag>

        <define:tag name="copyVar">
            <j:if test="${geronimoVersion == null}">
                <fail>Missing required attribute: geronimoVersion</fail>
            </j:if>
            <j:if test="${geronimoName == null}">
                <j:set var="geronimoName" value="geronimo"/>
            </j:if>
            <j:if test="${targetDir == null}">
                <j:set var="targetDir" value="${maven.build.dir}"/>
            </j:if>
            <ant:available property="geronimo.deploy.var.available"
                file="${geronimo.deploy.var.source}"
                type="dir"/>
            <j:if test="${geronimo.deploy.var.available}">
                <!-- copy everything -->
                <copy todir="${targetDir}/${geronimoName}-${geronimo_version}/var" overwrite="true">
                    <fileset dir="${basedir}/${geronimo.deploy.var.source}">
                    </fileset>
                </copy>
                <!-- and recopy with filtering xml, list, and properties files -->
                <deploy:velocityFilter
                    sourceDir="${basedir}/${geronimo.deploy.var.source}"
                    targetDir="${targetDir}/${geronimoName}-${geronimo_version}/var"
                    force="true"
                    context="${context}"/>
            </j:if>

        </define:tag>

    </define:taglib>

</project>