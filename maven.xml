<?xml version="1.0" encoding="UTF-8"?>

<!-- $Revision: 1.20 $ $Date: 2003/08/22 11:20:43 $ -->

<project default="default"
  xmlns:j="jelly:core" 
  xmlns:ant="jelly:ant" 
  xmlns:maven="jelly:maven">
  
  <!-- ======= -->
  <!-- Modules -->
  <!-- ======= -->
  
  <goal name="modules:reactor:init">
    <j:if test="${empty(module)}">
      <j:set var="module" value="*"/>
    </j:if>
    
    <j:if test="${context.getVariable('modules.includes') == null}">
      <j:set var="modules.includes" value="modules/${module}/project.xml,specs/${module}/project.xml"/>
    </j:if>
    
    <j:if test="${context.getVariable('modules.excludes') == null}">
      <j:set var="modules.excludes" value="modules/xbeans/project.xml"/>
    </j:if>
  </goal>
  
  <goal name="modules:reactor" prereqs="modules:reactor:init">
    <maven:reactor
        basedir="${basedir}"
        includes="${modules.includes}"
        excludes="${modules.excludes}"
        banner="Executing (${goals}):"
        ignoreFailures="false"
        goals="${goals}"
        postProcessing="true"
    />
  </goal>
  
  <goal name="modules:default">
    <j:set var="goals" value="default"/>
    <attainGoal name="modules:reactor"/>
  </goal>
  
  <goal name="modules:build">
    <attainGoal name="modules:default"/>
  </goal>
   
  <goal name="modules:site">
    <j:set var="goals" value="site"/>
    <attainGoal name="modules:reactor"/>
  </goal>
  
  <goal name="modules:javadoc">
    <j:set var="goals" value="javadoc"/>
    <attainGoal name="modules:reactor"/>
  </goal>
  
  <goal name="modules:clean">
    <j:set var="goals" value="clean"/>
    <attainGoal name="modules:reactor"/>
  </goal>
  
  <goal name="modules:jar:deploy">
    <j:set var="goals" value="jar:deploy"/>
    <attainGoal name="modules:reactor"/>
  </goal>
  
  <preGoal name="clean">
    <attainGoal name="modules:clean"/>
  </preGoal>
  
  <preGoal name="default">
    <attainGoal name="modules:default"/>
  </preGoal>
  
  <goal name="jar:deploy">
    <attainGoal name="modules:jar:deploy"/>
  </goal>
  
  
  <!-- ========================= -->
  <!-- Module Output Aggregation -->
  <!-- ========================= -->
  
  <goal name="modules:aggregate">
    <ant:echo>Aggregating modules...</ant:echo>
    
    <j:scope>
      <j:forEach var="module" items="${reactorProjects}">
        <ant:echo>Processing ${module.id}...</ant:echo>
        
        <!-- Get the modules root directory -->
        <j:set var="module.root" value="${module.file.parent}"/>
        
        <!--
           | Execute the aggregation hook.
           |
           | TODO: Should check if there is an aggregate hook for this module
           |       instead of using the catch hack.
         -->
        <j:set var="hook.name" value="modules:aggregate:${module.id}"/>
        <j:catch var="e">
          <attainGoal name="${hook.name}"/>
        </j:catch>
        <j:if test="${e != null}">
          <ant:echo level="warning">Failed to invoke aggregate hook: ${e}</ant:echo>
        </j:if>
        
        <!-- Process dependencies -->
        <j:forEach var="dependency" items="${module.dependencies}">
          <j:if test="${dependency.getProperty('runtime') == 'true'}">
            <!-- 
               | TODO: copy dependency artifact to lib/
               |       probably need to have specifiers for where this lib will go?
               |       or should this be put into a helper tag and called by the
               |       module aggregation hook
             -->
          </j:if>
        </j:forEach>
      </j:forEach>
    </j:scope>
  </goal>
  
  <goal name="modules:aggregate:geronimo:geronimo-common">
  </goal>
  
  
  <!-- =============================== -->
  <!-- Documentation & Site Generation -->
  <!-- =============================== -->
  
  <goal name="javadoc">
    <attainGoal name="modules:javadoc"/>
  </goal>
  
  <preGoal name="xdoc:jelly-transform">
    <attainGoal name="html2xdoc"/>
    <attainGoal name="faq"/>
  </preGoal>
  
  <!-- Turn off reports for the top-level project -->
  <postGoal name="xdoc:register-reports">
    <attainGoal name="maven-license-plugin:deregister"/>
    <attainGoal name="maven-checkstyle-plugin:deregister"/>
    <attainGoal name="maven-pmd-plugin:deregister"/>
    <attainGoal name="maven-simian-plugin:deregister"/>
    <attainGoal name="maven-jdepend-plugin:deregister"/>
    <attainGoal name="maven-statcvs-plugin:deregister"/>
    <attainGoal name="maven-jxr-plugin:deregister"/>
    <attainGoal name="maven-javadoc-plugin:deregister"/>
    <attainGoal name="maven-junit-report-plugin:deregister"/>
    <attainGoal name="maven-clover-plugin:deregister"/>
    
    <!-- Run some useful top-level reports -->
    <!--<attainGoal name="maven-changelog-plugin:deregister"/>-->
    <!--<attainGoal name="maven-file-activity-plugin:deregister"/>-->
    <!--<attainGoal name="maven-developer-activity-plugin:deregister"/>-->
  </postGoal>
  
  <preGoal name="site">
    <attainGoal name="modules:copy-site"/>
  </preGoal>
  
  <goal name="modules:copy-site" prereqs="modules:site"
  	description="Copy the generated websites of all the modules into the root project">
  	
  	<!-- a dummy scope tag to change XML namespace to ant -->
  	<j:scope xmlns="jelly:ant">
      
      <fileScanner var="scanner">
        <fileset dir="${basedir}"
          includes="${modules.includes}"
          excludes="${modules.excludes}"/>
      </fileScanner>
      
      <j:forEach var="file" items="${scanner.iterator()}">
        <j:set var="name">${file.parentFile.name}</j:set>
        <j:set var="type">${file.parentFile.parentFile.name}</j:set>
        <j:set var="outDir">${basedir}/target/docs/${type}/${name}</j:set>
        
        <echo>Copying module ${name} documentation to ${outDir}</echo>
        <mkdir dir="${outDir}"/>
        <copy todir="${outDir}">
          <fileset dir="${basedir}/${type}/${name}/target/docs"/>
   	    </copy>
      </j:forEach>
      
    </j:scope>
  </goal>
  
  <goal name="site:tocvs" prereqs=""
  	description="Creates the entire website and copies it to the local CVS repository so that it can be checked in to update the Incubator site">
  	
  	<!-- a dummy scope tag to change XML namespace to ant -->
  	<j:scope xmlns="jelly:ant">
    
  	  <j:if test="${empty(geronimo.cvs.docdir)}">
  	    <j:set var="geronimo.cvs.docdir" value="../incubator-site/build/site/projects/geronimo"/>
  	  </j:if>
      
      <mkdir dir="${geronimo.cvs.docdir}"/>
      <copy todir="${geronimo.cvs.docdir}">
        <fileset dir="${basedir}/target/docs"/>
   	  </copy>
      
  	</j:scope>
  </goal>
  
  
  <!-- ============================== -->
  <!-- Helpers to run Apache Geronimo -->
  <!-- ============================== -->
  
  <goal name="run" description="Runs the Geronimo Server using the current build">
    <j:set var="module" value="core"/>
    <j:set var="goals" value="run"/>
    <attainGoal name="modules:reactor"/>
  </goal>
  
</project>
