<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2005 The Apache Software Foundation

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<!-- $Rev$ $Date$ -->

<project default="default"
    xmlns:j="jelly:core"
    xmlns:ant="jelly:ant"
    xmlns:deploy="geronimo:deploy"
    xmlns:velocity="jelly:velocity"
    >

    <j:set var="instDir" value="${maven.build.dir}/geronimo-${geronimo_version}"/>

    <goal name="default">
        <attainGoal name="adventure:deploy"/>
    </goal>

    <goal name="adventure:deploy" description="Deploys Adventure Builder" prereqs="clean">
        <deploy:unpackServer
            geronimoVersion="${geronimo_version}"
            geronimoName="geronimo"/>

        <fileScanner var="plans">
            <fileset dir="${basedir}/src/plan">
                <include name="*-plan.xml"/>
            </fileset>
        </fileScanner>

        <ant:mkdir dir="${maven.build.dir}/plan"/>
        <j:forEach var="plan" items="${plans.iterator()}">
            <j:set var="planName" value="${plan.name}"/>
            <echo>Preprocessing ${planName}</echo>
            <velocity:merge
                basedir="${basedir}/src/plan"
                template="${planName}"
                name="${maven.build.dir}/plan/${planName}"/>
        </j:forEach>

        <ant:echo>Distributing Database Configuration</ant:echo>
        <ant:java fork="true" jar="${instDir}/bin/deployer.jar" failonerror="true">
            <ant:jvmarg value="-ea"/>
            <ant:arg value="--offline"/>
            <ant:arg value="distribute"/>
            <ant:arg value="${maven.build.dir}/plan/adventure1.0.1-db-ra-plan.xml"/>
            <ant:arg value="${maven.repo.local}/tranql/rars/tranql-connector-derby-embed-xa-${tranql_vendors_version}.rar"/>
        </ant:java>

		<ant:echo>Distributing Adventure Builder Consumer Website Application</ant:echo>
        <ant:java fork="true" jar="${instDir}/bin/deployer.jar" failonerror="true">
            <ant:jvmarg value="-ea"/>
<!--
            <ant:jvmarg value="-Xdebug"/>
            <ant:jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,address=8000"/>
-->
            <ant:arg value="--offline"/>
            <ant:arg value="distribute"/>
            <ant:arg value="${maven.build.dir}/plan/consumerwebsite1.0.1.ear-plan.xml"/>
            <!--ant:arg value="${adventure.home}/project/apps/consumerwebsite/build/consumerwebsite.ear"/-->
            <ant:arg value="${adventure.home}/consumerwebsite.ear"/>
        </ant:java>
    </goal>

    <goal name="adventure:start" description="Start Adventure Builder">
        <deploy:startRemoteServer
            geronimoTarget="${instDir}"
            debugPort="8000"
	    configs="org/apache/geronimo/Adventure1.0.1 org/apache/geronimo/RuntimeDeployer"/>
        <ant:echo message="Waiting for server at: ${instDir}"/>
        <deploy:waitForStarted
            uri="deployer:geronimo:jmx:rmi://localhost/jndi/rmi:/JMXConnector"
            username="system"
            password="manager"
            id="org/apache/geronimo/Adventure1.0.1"/>
        <echo message="PetStore has started"/>
    </goal>

    <goal name="adventure:stop" description="Stop Adventure Builder">
        <deploy:stopRemoteServer
            uri="deployer:geronimo:jmx:rmi://localhost/jndi/rmi:/JMXConnector"
            username="system"
            password="manager"/>
        <echo message="server has stopped"/>
    </goal>

</project>
