<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- $Revision: 1.9 $ $Date: 2004/02/13 15:46:47 $ -->

<project default="default"
    xmlns:j="jelly:core"
    xmlns:u="jelly:util"
    xmlns:ant="jelly:ant"
    xmlns:maven="jelly:maven"
    xmlns:define="jelly:define"
    xmlns:deploy="geronimo:deploy">

    <!-- ================= -->
    <!-- Global Properties -->
    <!-- ================= -->

    <!-- Determine what the top-level project root is -->
    <j:set var="project.root" value="${pom.parentBasedir().getParentFile().getCanonicalFile()}"/>

    <!-- Load the global properties -->
    <ant:property file="${project.root}/etc/global.properties"/>


    <!-- ==================== -->
    <!-- Default Global Goals -->
    <!-- ==================== -->

    <goal name="default">
<!--        <attainGoal name="deploy:server"/>-->
<!--        <attainGoal name="install:server"/>-->
        <attainGoal name="build"/>
    </goal>

    <goal name="build">
        <attainGoal name="assemble"/>
    </goal>

    <goal name="rebuild">
        <attainGoal name="clean"/>
        <attainGoal name="build"/>
    </goal>

    <!-- ==================================================== -->
    <!-- Assemble server installation from generated modules  -->
    <!-- ==================================================== -->
    <goal name="assemble">
        <!-- Copy  the runtime dependencies into lib and create a classpath for the server.jar file -->
        <j:set var="libDir" value="target/lib"/>
        <ant:mkdir dir="${libDir}"/>
        <j:forEach var="artifact" items="${pom.artifacts}">
            <j:set var="dependency" value="${artifact.dependency}"/>
            <j:if test="${dependency.getProperty('lib') == 'true'}">
                <ant:copy todir="${libDir}" file="${artifact.path}"/>
                <j:set var="classpath" value="${classpath} ../lib/${artifact.name}"/>
            </j:if>
            <j:if test="${dependency.getProperty('server') == 'true'}">
                <j:set var="server.classpath" value="${server.classpath} ../lib/${artifact.name}"/>
            </j:if>
            <j:if test="${dependency.getProperty('deploy') == 'true'}">
                <j:set var="deploy.classpath" value="${deploy.classpath} ../lib/${artifact.name}"/>
            </j:if>
            <j:if test="${dependency.artifactId == 'geronimo-system'}">
                <j:set var="system.artifact" value="${artifact.path}"/>
            </j:if>
        </j:forEach>

        <!-- Create directory for XML schema documents -->
        <ant:mkdir dir="target/schema"/>
        <ant:copy todir="target/schema" flatten="true">
            <ant:fileset dir="${project.root}/specs/schema">
                <ant:include name="src/j2ee_1_4schema/*.xsd"/>
                <ant:include name="src/j2ee_1_3dtd/*.dtd"/>
            </ant:fileset>
            <ant:fileset dir="${project.root}/modules/deployment">
                <ant:include name="src/schema/*.xsd"/>
            </ant:fileset>
            <ant:fileset dir="src/etc"/>
        </ant:copy>

        <!-- Pre-load the server's repository -->
        <ant:mkdir dir="target/repository"/>
        <ant:copy todir="target/repository">
            <ant:fileset dir="${maven.repo.local}">
                <ant:include name="geronimo/**"/>
                <ant:include name="geronimo-spec/**"/>
                <ant:include name="log4j/jars/log4j-1.2.8.jar"/>
                <ant:include name="jetty/jars/org.mortbay.jetty-5.0.beta0.jar"/>
                <ant:include name="tomcat/jars/jasper-compiler-5.0.16.jar"/>
                <ant:include name="tomcat/jars/jasper-runtime-5.0.16.jar"/>
                <ant:include name="commons-el/jars/commons-el-1.0.jar"/>
                <ant:include name="ant/jars/ant-1.5.jar"/>
            </ant:fileset>
        </ant:copy>

        <!-- Create the server.jar file used to run the server-->
        <ant:mkdir dir="target/bin"/>
        <ant:jar destfile="target/bin/server.jar">
            <manifest>
                <attribute name="Main-Class" value="org.apache.geronimo.Geronimo"/>
                <attribute name="Class-Path" value="${server.classpath}"/>
            </manifest>
        </ant:jar>

        <!-- Create the deploy.jar file used to deploy things -->
        <ant:jar destfile="target/bin/deploy.jar">
            <manifest>
                <attribute name="Main-Class" value="org.apache.geronimo.deployment.Deployer"/>
                <attribute name="Class-Path" value="${deploy.classpath}"/>
            </manifest>
        </ant:jar>

        <!-- bootstrap the service deployer -->
        <ant:echo>Bootstrapping service deployer</ant:echo>
        <ant:mkdir dir="target/config"/>
        <ant:mkdir dir="target/config-store"/>
        <j:invokeStatic className="org.apache.geronimo.deployment.Bootstrap" method="bootstrap">
            <j:arg type="java.lang.String" value="${basedir}/target/config/service-deployer.car"/>
            <j:arg type="java.lang.String" value="${basedir}/target/config-store"/>
            <j:arg type="java.lang.String" value="${system.artifact}"/>
        </j:invokeStatic>

        <!-- build the system configuration -->
        <ant:echo>Building system configuration</ant:echo>
        <ant:java fork="true" jar="target/bin/deploy.jar">
            <ant:sysproperty key="geronimo.base.dir" value="target"/>
            <ant:arg value="--install"/>
            <ant:arg value="--plan"/>
            <ant:arg value="src/plan/system-config.xml"/>
            <ant:arg value="--outfile"/>
            <ant:arg value="target/config/system.car"/>
            <ant:arg value="--store"/>
            <ant:arg value="target/config-store"/>
            <ant:arg value="--deployer"/>
            <ant:arg value="org/apache/geronimo/ServiceDeployer"/>
        </ant:java>

        <!-- build the J2EEServer configuration -->
        <ant:echo>Building server configuration</ant:echo>
        <ant:java fork="true" jar="target/bin/deploy.jar">
            <ant:sysproperty key="geronimo.base.dir" value="target"/>
            <ant:arg value="--install"/>
            <ant:arg value="--plan"/>
            <ant:arg value="src/plan/server-config.xml"/>
            <ant:arg value="--outfile"/>
            <ant:arg value="target/config/J2EEServer.car"/>
            <ant:arg value="--store"/>
            <ant:arg value="target/config-store"/>
            <ant:arg value="--deployer"/>
            <ant:arg value="org/apache/geronimo/ServiceDeployer"/>
        </ant:java>
        <!--
        <j:set var="g.repo" value="${maven.repo.local}/geronimo/jars"/>
        <ant:mkdir dir="${basedir}/target/config"/>
        <ant:echo message="in deploy:server"/>
        <deploy:deploy
            deployconfigid="org/apache/geronimo/Server"
            deployoutfile="target/config/server.car"
            deployurl="${g.repo}/geronimo-security-package-DEV.jar,${g.repo}/geronimo-transaction-package-DEV.jar,${g.repo}/geronimo-connector-package-DEV.jar,${g.repo}/geronimo-jetty-package-DEV.jar,${g.repo}/geronimo-web-console-package-DEV.jar,${maven.repo.local}/concurrent/jars/concurrent-1.3.2.jar,${maven.repo.local}/xerces/jars/xercesImpl-2.6.0.jar,${maven.repo.local}/xml-apis/jars/xml-apis-1.0.b2.jar,${maven.repo.local}/xml-commons-resolver/jars/xml-commons-resolver-1.1.jar,${maven.repo.local}/geronimo/jars/geronimo-core-${pom.currentVersion}.jar,${maven.repo.local}/geronimo/jars/geronimo-deployment-${pom.currentVersion}.jar,${maven.repo.local}/geronimo/jars/geronimo-common-${pom.currentVersion}.jar,${maven.repo.local}/geronimo/jars/loglog4j-service-${pom.currentVersion}.jar,${maven.repo.local}/geronimo/jars/server-info-${pom.currentVersion}.jar"/>
        <ant:echo message="did deploy:server"/>
-->
    </goal>

    <goal name="install:server">
        <ant:echo message="in install:server"/>
        <deploy:install
            installDomain="geronimo"
            installStoreDir="target/config-store"
            installConfig="target/config/server.car"/>
        <ant:echo message="did install:server"/>
    </goal>

    <goal name="load:server">
        <ant:echo message="in load:server"/>
        <deploy:loadAndReturn
            runDomain="geronimo"
            runStoreDir="target/config-store"
            runConfigID="org/apache/geronimo/Server"/>
        <ant:echo message="did load:server"/>
    </goal>

    <goal name="loadAndWait:server">
        <ant:echo message="in loadAndWait:server"/>
        <deploy:loadAndWait
            runDomain="geronimo"
            runStoreDir="target/config-store"
            runConfigID="org/apache/geronimo/Server"/>
        <ant:echo message="did loadAndWait:server"/>
    </goal>

    <goal name="run:server">
        <j:set var="run.dir" value="${basedir}/target/bin"/>
        <ant:echo message="Running in ${run.dir}"/>

        <j:jelly xmlns="jelly:ant">

            <property environment="env"/>
            <java jar="target/bin/server.jar"
                fork="true"
                maxmemory="256m"
                failonerror="true"
                dir="${run.dir}">

                <jvmarg value="-ea"/>
                <sysproperty key="geronimo.base.dir" value="../var"/>

                <arg value="../config-store"/>
                <arg value="org/apache/geronimo/Server"/>
            </java>
        </j:jelly>
    </goal>

    <goal name="debug:server">
        <j:set var="run.dir" value="${basedir}"/>
        <ant:echo message="Running in ${run.dir}"/>

        <j:jelly xmlns="jelly:ant">

            <property environment="env"/>
            <java jar="target/bin/server.jar"
                fork="true"
                maxmemory="256m"
                failonerror="true"
                dir="${run.dir}">

                <jvmarg value="-ea"/>
                <jvmarg value="-Xdebug"/>
                <jvmarg value="-Xnoagent"/>
                <jvmarg value="-Djava.compiler=NONE"/>
                <jvmarg value="-Xrunjdwp:transport=dt_socket,address=8888,server=y,suspend=y"/>

                <sysproperty key="geronimo.base.dir" value="../var"/>
                <sysproperty key="java.compiler" value="NONE"/>

                <arg value="target/config-store"/>
                <arg value="org/apache/geronimo/Server"/>
            </java>
        </j:jelly>
    </goal>

    <goal name="deployinstallrun">
        <attainGoal name="deploy:server"/>
        <attainGoal name="install:server"/>
        <attainGoal name="run:server"/>
    </goal>

    <goal name="run:main">
        <ant:echo></ant:echo>
        <ant:echo>Please use "maven run:server or maven deployinstallrun" instead</ant:echo>
        <ant:echo></ant:echo>
    </goal>


</project>
