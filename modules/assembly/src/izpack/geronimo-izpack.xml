<?xml version="1.0" encoding="iso-8859-1" ?>
<installation version="1.0">
    <info>
        <appname>Apache Geronimo</appname>
        <appversion>${GeronimoVersion}</appversion>
        <url>http://geronimo.apache.org/</url>
        <javaversion>1.4</javaversion>
    </info>
    <variables>
    </variables>
    <guiprefs width="640" height="480" resizable="yes"/>
    <locale>
        <langpack iso3="eng"/>
    </locale>
    <resources>
        <res id="LicencePanel.licence" src="LICENSE.txt"/>
        <res id="InfoPanel.info" src="RELEASE-NOTES-${ReleaseNotesVersion}.txt"/>
        <res id="userInputSpec.xml" src="izpack-user-input.xml" />
        <res id="ProcessPanel.Spec.xml" src="izpack-process.xml" />
    </resources>
    <panels>
        <panel classname="HelloPanel"/>
        <panel classname="LicencePanel"/>
        <panel classname="TargetPanel"/>
        <panel classname="PacksPanel"/>
        <panel classname="UserInputPanel"/>
        <panel classname="UserInputPanel"/>
        <panel classname="UserInputPanel"/>
        <panel classname="UserInputPanel"/>
        <panel classname="UserInputPanel"/>
        <panel classname="UserInputPanel"/>
        <panel classname="UserInputPanel"/>
        <panel classname="UserInputPanel"/>
        <panel classname="InstallPanel"/>
        <panel classname="ProcessPanel"/>
        <panel classname="InfoPanel"/>
        <panel classname="FinishPanel"/>
    </panels>
    <packs>
        <pack name="Server" required="yes">
            <!-- o/a/g/System -->
            <description>Core Geronimo installation.  This includes the code and libraries necessary for all the features described below.  The subsequent options simply let you select what should be run by default when the server is started.  Anything not selected on this screen could be manually enabled later.</description>
            <file src="BUILDING.txt" targetdir="$INSTALL_PATH"/>
            <file src="LICENSE.txt" targetdir="$INSTALL_PATH"/>
            <file src="README.txt" targetdir="$INSTALL_PATH"/>
            <file src="RELEASE-NOTES-1.0-M1.txt" targetdir="$INSTALL_PATH"/>
            <file src="RELEASE-NOTES-1.0-M2.txt" targetdir="$INSTALL_PATH"/>
            <file src="RELEASE-NOTES-1.0-M3.txt" targetdir="$INSTALL_PATH"/>
            <file src="RELEASE-NOTES-1.0-M4.txt" targetdir="$INSTALL_PATH"/>
<!--  COMING SOON          <file src="RELEASE-NOTES-1.0-M5.txt" targetdir="$INSTALL_PATH"/>-->
            <file src="bin" targetdir="$INSTALL_PATH"/>
            <file src="lib" targetdir="$INSTALL_PATH"/>
            <file src="config-store" targetdir="$INSTALL_PATH"/>
            <file src="repository" targetdir="$INSTALL_PATH"/>
            <file src="schema" targetdir="$INSTALL_PATH"/>
            <file src="var" targetdir="$INSTALL_PATH"/>
            <singlefile src="var/config/config.izpack.list" target="$INSTALL_PATH/var/config/config.list"/>
            <parsable targetfile="$INSTALL_PATH/var/security/users.properties" type="javaprop"/>
            <parsable targetfile="$INSTALL_PATH/var/security/groups.properties" type="javaprop"/>
            <parsable targetfile="$INSTALL_PATH/var/config/config.xml" type="xml"/>
        </pack>
        <pack name="J2EE Features" required="no" preselected="yes">
            <!-- o/o/g/RMINaming -->
            <!-- o/o/g/Server -->
            <!-- o/o/g/RuntimeDeployer -->
            <!-- o/o/g/SystemDatabase -->
            <description>If selected, basic features for J2EE support will be enabled, including a J2EE Web container, a JMS broker, an EJB server, an embedded Derby database, an administrative security realm, etc.  If not selected, these features will be installed but would need to be manually activated later.</description>
            <depends packname="Server" />
        </pack>

        <pack name="CORBA Features" required="no" preselected="yes">
            <!-- o/o/g/ServerCORBA -->
            <description>Basic ORB and Name Server support with many sample target security configurations</description>
            <depends packname="J2EE Features" />
        </pack>

        <pack name="JMS Features" required="no" preselected="yes">
            <!-- o/o/g/ActiveMQServer -->
            <!-- o/o/g/SystemJMS -->
            <description>The ActiveMQ broker and a sample J2CA 1.5 connector deployment</description>
            <depends packname="J2EE Features" />
        </pack>

        <!-- JETTY -->
        <pack name="Jetty Web Container" required="no" preselected="yes">
            <!-- o/o/g/Jetty -->
            <!-- o/o/g/JettyRuntimeDeployer -->
            <description>The Jetty Web Container</description>
            <depends packname="J2EE Features" />
        </pack>
        <pack name="Jetty Welcome Application" required="no" preselected="yes">
            <!-- o/o/g/Console/Jetty -->
            <description>Simple welcome application normally at localhost:8080/</description>
            <depends packname="Jetty Web Container" />
        </pack>
        <pack name="Jetty Web Management Console" required="no" preselected="yes">
            <!-- o/o/g/Console/Jetty -->
            <description>A web-based management console which allows an administrator to log in and view and customize the Geronimo server configuration (such as network ports, logging, thread pools, application deployments, etc.).  The console login is the same administrative login you'll be setting in the next step.  The console can typically be reached at http://localhost:8080/console/ though the default port may be changed on the web configuration screen.  If not selected, the console will be installed but would need to be manually activated later.</description>
            <depends packname="Jetty Web Container" />
        </pack>
        <pack name="Jetty UDDI Server" required="no" preselected="no">
            <!-- o/o/g/juddiServer/1.0/Jetty -->
            <description>A UDDI server that runs in Geronimo, using the jUDDI package.</description>
            <depends packname="Jetty Web Container" />
        </pack>

        <!-- TOMCAT-->
        <pack name="Tomcat Web Container" required="no" preselected="yes">
            <!-- o/o/g/Tomcat -->
            <!-- o/o/g/TomcatRuntimeDeployer -->
            <description>The Tomcat Web Container</description>
            <depends packname="J2EE Features" />
        </pack>
        <pack name="Tomcat Welcome Application" required="no" preselected="yes">
             <!-- o/o/g/Console/Tomcat -->
            <description>Simple welcome application normally at localhost:8080/</description>
             <depends packname="Tomcat Web Container" />
         </pack>
         <pack name="Tomcat Web Management Console" required="no" preselected="yes">
             <!-- o/o/g/Console/Tomcat -->
             <description>A web-based management console which allows an administrator to log in and view and customize the Geronimo server configuration (such as network ports, logging, thread pools, application deployments, etc.).  The console login is the same administrative login you'll be setting in the next step.  The console can typically be reached at http://localhost:8080/console/ though the default port may be changed on the web configuration screen.  If not selected, the console will be installed but would need to be manually activated later.</description>
             <depends packname="Tomcat Web Container" />
         </pack>
         <pack name="Tomcat UDDI Server" required="no" preselected="no">
             <!-- o/o/g/juddiServer/1.0/Tomcat -->
             <description>A UDDI server that runs in Geronimo, using the jUDDI package.</description>
             <depends packname="Tomcat Web Container" />
         </pack>

        <pack name="LDAP Server" required="no" preselected="no">
            <!-- o/o/g/Directory -->
            <description>An LDAP directory server that runs in Geronimo, using the Apache Directory package.  This runs on the non-standard port of 1389 by default, so the server can start as a non-root user.  If not selected, this configuration will be available but would need to be manually activated later.</description>
            <depends packname="J2EE Features" />
        </pack>
        <pack name="Sample Database Pool" required="no" preselected="no">
            <!-- o/o/g/DefaultDatabase -->
            <description>A sample embedded database, using the Derby RDBMS.  If selected, this creates a database pool that connects to the "DefaultDatabase" database running in the embedded Derby installation.  If not selected, this configuration will be available but would need to be manually activated later.  The "DefaultDatabase" database will be created the first time this configuration is run.</description>
            <depends packname="J2EE Features" />
        </pack>
        <pack name="Spring Integration" required="no" preselected="no">
            <!-- o/o/g/SpringRuntime -->
            <!-- o/o/g/SpringDeployer -->
            <description>Features to run Spring applications in Geronimo without any additional J2EE packaging.  This is currently working but not being actively developed.  If not selected, these features will be installed but would need to be manually activated later.</description>
            <depends packname="J2EE Features" />
        </pack>
        <pack name="JMX Debug Web Application" required="no" preselected="yes">
            <!-- o/o/g/DebugConsole -->
            <description>A web application that lets you display the JMX data from a running Geronimo server.  This can be useful to see exactly what features are enabled in Geronimo and to help resolve resource mapping failures.  However, it is not very user-friendly compared to, for example, the web management console.  The debug application can typically be reached at http://localhost:8080/debug-tool/ though the default port may be changed on the web configuration screen.  If not selected, the JMX debug application will be installed but would need to be manually activated later.</description>
            <depends packname="Jetty Web Container" />
        </pack>
    </packs>
</installation>