<?xml version="1.0" encoding="ISO-8859-1"?>
<!--

    Copyright 2004 The Apache Software Foundation

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<!-- $Rev$ $Date$ -->

<project default="default"
    xmlns:j="jelly:core"
    xmlns:ant="jelly:ant"
    xmlns:define="jelly:define"
    xmlns:velocity="jelly:velocity"
    xmlns:bootstrap="geronimo:bootstrap"
    xmlns:deploy="geronimo:deploy"
    >

    <!-- ================= -->
    <!-- Global Properties -->
    <!-- ================= -->

    <!-- Determine what the top-level project root is -->
    <j:set var="project.root" value="${pom.parentBasedir().getParentFile().getCanonicalFile()}"/>

    <!-- Determine what the top-level project root is -->
    <j:set var="distDir" value="${basedir}/target/${pom.groupId}-${pom.currentVersion}"/>


    <!-- ==================== -->
    <!-- Default Global Goals -->
    <!-- ==================== -->

    <goal name="default">
        <attainGoal name="build"/>
    </goal>

    <goal name="build">
        <attainGoal name="jar:install"/>
    </goal>

    <goal name="rebuild">
        <attainGoal name="clean"/>
        <attainGoal name="build"/>
    </goal>

    <preGoal name="jar:jar">
        <attainGoal name="assemble"/>
        <j:if test="${context.getVariable('geronimo.assemble.delete.logs') == 'true'}">
            <!--wait for server to finish stopping so windows unlocks the log files -->
            <sleep seconds="2"/>
            <delete>
                <fileset dir="${distDir}/var/log" includes="*.log"/>
            </delete>
        </j:if>
        <j:set var="maven.build.dest" value="${distDir}"/>
    </preGoal>

    <!-- ==================================================== -->
    <!-- Assemble server installation from generated modules  -->
    <!-- ==================================================== -->
    <goal name="assemble">
        <j:if test="${context.getVariable('geronimo.assemble.clean') == 'true'}">
            <echo>Deleting target directory</echo>
            <delete dir="${basedir}/target"/>
        </j:if>

        <!-- Copy  the runtime dependencies into lib and create a classpath for the server.jar file -->
        <j:set var="libDir" value="${distDir}/lib"/>
        <ant:mkdir dir="${libDir}"/>
        <ant:mkdir dir="${libDir}/endorsed"/>

        <j:forEach var="artifact" items="${pom.artifacts}">
            <j:set var="dependency" value="${artifact.dependency}"/>
            <j:if test="${dependency.getProperty('lib') == 'true'}">
                <ant:copy todir="${libDir}" file="${artifact.path}"/>
                <j:set var="classpathEntry" value="../lib/${artifact.name}"/>
            </j:if>
            <j:if test="${dependency.getProperty('endorsed') == 'true'}">
                <ant:copy todir="${libDir}/endorsed" file="${artifact.path}"/>
                <j:set var="classpathEntry" value="../lib/endorsed/${artifact.name}"/>
            </j:if>
            <j:if test="${dependency.getProperty('server') == 'true'}">
                <j:set var="server.classpath" value="${server.classpath} ${classpathEntry}"/>
            </j:if>
            <j:if test="${dependency.getProperty('client') == 'true'}">
                <j:set var="client.classpath" value="${client.classpath} ${classpathEntry}"/>
            </j:if>
            <j:if test="${dependency.getProperty('deploy') == 'true'}">
                <j:set var="deploy.classpath" value="${deploy.classpath} ${classpathEntry}"/>
            </j:if>
        </j:forEach>

        <!-- Create directory for XML schema documents -->
        <ant:mkdir dir="${distDir}/schema"/>
        <ant:copy todir="${distDir}/schema" flatten="true">
            <ant:fileset dir="${project.root}/modules/j2ee-schema">
                <ant:include name="src/j2ee_1_4schema/*.xsd"/>
                <ant:include name="src/j2ee_1_3dtd/*.dtd"/>
            </ant:fileset>
            <ant:fileset dir="${project.root}/modules/deployment">
                <ant:include name="src/schema/*.xsd"/>
            </ant:fileset>
            <ant:fileset dir="${project.root}/modules/j2ee-builder">
                <ant:include name="src/schema/*.xsd"/>
            </ant:fileset>
            <ant:fileset dir="${project.root}/modules/jetty-builder">
                <ant:include name="src/schema/*.xsd"/>
            </ant:fileset>
            <ant:fileset dir="${project.root}/modules/tomcat-builder">
                <ant:include name="src/schema/*.xsd"/>
            </ant:fileset>
            <ant:fileset dir="${project.root}/modules/connector-builder">
                <ant:include name="src/schema/*.xsd"/>
            </ant:fileset>
            <ant:fileset dir="${project.root}/modules/naming-builder">
                <ant:include name="src/schema/*.xsd"/>
            </ant:fileset>
            <ant:fileset dir="${project.root}/modules/security-builder">
                <ant:include name="src/schema/geronimo*.xsd"/>
            </ant:fileset>
            <ant:fileset dir="${project.root}/modules/client-builder">
                <ant:include name="src/schema/*.xsd"/>
            </ant:fileset>
            <ant:fileset dir="${project.root}">
                <ant:include name="openejb/modules/openejb-builder/src/schema/openejb-jar.xsd"/>
            </ant:fileset>
            <ant:fileset dir="src/etc"/>
        </ant:copy>
        <ant:fileScanner var="schemaScanner">
            <ant:fileset dir="${distDir}/schema">
                <ant:include name="geronimo-application.xsd"/>
                <ant:include name="geronimo-application-client.xsd"/>
                <ant:include name="geronimo-jetty.xsd"/>
                <ant:include name="geronimo-tomcat.xsd"/>
                <ant:include name="geronimo-connector_1_5.xsd"/>
            </ant:fileset>
        </ant:fileScanner>
        <j:forEach var="schema" items="${schemaScanner.iterator()}">
            <ant:replace file="${schema}" token="../../../naming-builder/src/schema/" value=""/>
            <ant:replace file="${schema}" token="../../../service-builder/src/schema/" value=""/>
            <ant:replace file="${schema}" token="../../../security-builder/src/schema/" value=""/>
            <ant:replace file="${schema}" token="../../../connector-builder/src/schema/" value=""/>
        </j:forEach>

        <!-- copy in data files -->
        <!-- the persistent config list will need to be recopied if the online deployer is used -->
        <ant:copy todir="${distDir}/var">
            <ant:fileset dir="src/var"/>
        </ant:copy>

        <!-- Pre-load the server's repository -->
        <ant:mkdir dir="${distDir}/repository"/>
        <ant:copy todir="${distDir}/repository">
            <ant:fileset dir="${maven.repo.local}">
                <j:forEach var="artifact" items="${pom.artifacts}">
                    <j:set var="dependency" value="${artifact.dependency}"/>
                    <j:if test="${dependency.getProperty('repository') == 'true'}">
                        <ant:include name="${dependency.getArtifactDirectory()}/${dependency.getType()}s/${dependency.getArtifact()}"/>
                    </j:if>
                </j:forEach>
            </ant:fileset>
        </ant:copy>

        <!--        <ant:mkdirs dir="${distDir}/repository/jdk/jars"/>-->
        <!--        <ant:copy file="${java.home}/../lib/tools.jar" todir="${distDir}/repository/jdk/jars">-->
        <!---->
        <!--        </ant:copy>-->

        <ant:copy todir="${distDir}/repository">
            <mapper type="glob" from="${maven.repo.local}*" to="*"/>
            <ant:fileset dir="${maven.repo.local}">
                <j:forEach var="artifact" items="${pom.artifacts}">
                    <j:set var="dependency" value="${artifact.dependency}"/>
                    <j:if test="${dependency.getProperty('repository') == 'true'}">
                        <ant:fileset include="${artifact.path}"/>
                    </j:if>
                </j:forEach>
            </ant:fileset>
        </ant:copy>

        <ant:echo message="${project.root}"/>
        <ant:copy todir="${distDir}">
            <fileset dir="${project.root}" includes="*.txt,STATUS"/>
        </ant:copy>

        <!-- Preprocess all mungible content using velocity  -->

        <!-- Copy over the IzPack Installer configuration files -->
        <ant:mkdir dir="${basedir}/target/installer"/>
        <fileScanner var="installFiles">
            <fileset dir="${basedir}/src/izpack">
                <include name="*.xml"/>
            </fileset>
        </fileScanner>
        <j:set var="ServerClasspath" value="${server.classpath}" />
        <j:set var="ClientClasspath" value="${client.classpath}" />
        <j:set var="GeronimoVersion" value="${geronimo_version}" />
        <j:set var="ReleaseNotesVersion" value="1.0-M3" />
        <j:forEach var="installer" items="${installFiles.iterator()}">
            <j:set var="installerName" value="${installer.name}"/>
            <echo>Processing installer file ${installerName}</echo>
            <velocity:merge
                basedir="${basedir}/src/izpack"
                template="${installerName}"
                name="${basedir}/target/installer/${installerName}"/>
        </j:forEach>

        <!-- First pass to write out plans with some variables remaining
             for the benefit of the installer -->
        <ant:mkdir dir="${basedir}/target/installer/plan-src"/>
        <fileScanner var="plans">
            <fileset dir="${basedir}/src/plan">
                <include name="*-plan.xml"/>
            </fileset>
        </fileScanner>

        <j:forEach var="plan" items="${plans.iterator()}">
            <j:set var="planName" value="${plan.name}"/>
            <echo>Installer processing ${planName}</echo>
            <velocity:merge
                basedir="${basedir}/src/plan"
                template="${planName}"
                name="${basedir}/target/installer/plan-src/${planName}"/>
        </j:forEach>


        <!-- Second pass for the default build -->

        <!-- Substitution variables for default hostname, ports, etc. -->
        <j:set var="PlanServerHostname" value="localhost" />
        <j:set var="PlanNamingPort" value="1099" />
        <j:set var="PlanIIOPPort" value="9000" />
        <j:set var="PlanORBPort" value="2001" />
        <j:set var="PlanCOSNamingPort" value="1050" />
        <j:set var="PlanClientAddresses" value="127.0.0.1" />
        <j:set var="PlanJettyHTTPPort" value="8080" />
        <j:set var="PlanJettyHTTPSPort" value="8443" />
        <j:set var="PlanOpenEJBPort" value="4201" />
        <j:set var="PlanTomcatHTTPPort" value="8090" />
        <j:set var="PlanTomcatHTTPSPort" value="8443" />
        <j:set var="PlanTomcatAJPPort" value="8009" />
        <j:set var="PlanActiveMQPort" value="61616" />
        <j:set var="PlanDerbyPort" value="1527" />

        <ant:mkdir dir="${basedir}/target/plan"/>
        <j:forEach var="plan" items="${plans.iterator()}">
            <j:set var="planName" value="${plan.name}"/>
            <echo>Preprocessing ${planName}</echo>
            <velocity:merge
                basedir="${basedir}/src/plan"
                template="${planName}"
                name="${basedir}/target/plan/${planName}"/>
        </j:forEach>

        <!-- bootstrap the deployer -->
        <ant:echo>Bootstrapping service deployer</ant:echo>
        <ant:mkdir dir="${distDir}/bin"/>
        <ant:mkdir dir="${distDir}/config-store"/>

        <define:taglib uri="geronimo:bootstrap">
            <define:jellybean
                name="bootstrap"
                className="org.apache.geronimo.deployment.Bootstrap"
                method="bootstrap"/>
        </define:taglib>

        <bootstrap:bootstrap
            deployerJar="${distDir}/bin/deployer.jar"
            storeDir="${distDir}/config-store"
            repositoryDir="${distDir}/repository"
            deployerSystemPlan="${basedir}/target/plan/deployer-system-plan.xml"
            j2eeDeployerPlan="${basedir}/target/plan/j2ee-deployer-plan.xml"
            deployerClassPath="${deploy.classpath}"
            deployerGBean="geronimo.deployer:name=Deployer,J2EEApplication=null,J2EEModule=org/apache/geronimo/J2EEDeployer,j2eeType=Deployer,J2EEServer=deployer"
            deploymentFactory="org.apache.geronimo.deployment.plugin.factories.DeploymentFactoryImpl"
            />

        <ant:copy todir="${basedir}/target/installer">
          <ant:fileset dir="${distDir}" />
        </ant:copy>

        <!-- build the system configuration and server.jar -->
        <ant:echo>Building server.jar</ant:echo>
        <ant:mkdir dir="${distDir}/bin"/>
        <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
            <ant:jvmarg value="-ea"/>
            <ant:arg value="package"/>
            <ant:arg value="--classPath"/>
            <ant:arg value="${server.classpath}"/>
            <ant:arg value="--mainClass"/>
            <ant:arg value="org.apache.geronimo.system.main.Daemon"/>
            <ant:arg value="--endorsedDirs"/>
            <ant:arg value="lib/endorsed"/>
            <ant:arg value="--install"/>
            <ant:arg value="target/plan/system-plan.xml"/>
            <ant:arg value="${distDir}/bin/server.jar"/>
        </ant:java>

        <!-- to debug one of these deployer calls, include these jvmargs right after the -ea arg
        <ant:jvmarg value="-Xdebug"/>
        <ant:jvmarg value="-Xnoagent"/>
        <ant:jvmarg value="-Djava.compiler=NONE"/>
        <ant:jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"/>
        -->

        <!-- build the J2EEServer configuration -->
        <ant:echo>Building server configuration</ant:echo>
        <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
            <ant:jvmarg value="-ea"/>
            <ant:arg value="distribute"/>
            <ant:arg value="target/plan/j2ee-server-plan.xml"/>
        </ant:java>

        <!-- build the runtime deployer configuration -->
        <ant:echo>Building runtime deployer configuration</ant:echo>
        <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
            <ant:jvmarg value="-ea"/>
            <ant:arg value="distribute"/>
            <ant:arg value="target/plan/j2ee-runtime-deployer-plan.xml"/>
        </ant:java>

        <!-- build the system configuration and client.jar -->
        <ant:echo>Building client.jar</ant:echo>
        <ant:mkdir dir="${distDir}/bin"/>
        <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
            <ant:jvmarg value="-ea"/>
            <ant:arg value="package"/>
            <ant:arg value="--mainClass"/>
            <ant:arg value="org.apache.geronimo.system.main.ClientCommandLine"/>
            <ant:arg value="--classPath"/>
            <ant:arg value="${client.classpath}"/>
            <ant:arg value="--endorsedDirs"/>
            <ant:arg value="${libDir}/endorsed"/>
            <ant:arg value="--install"/>
            <ant:arg value="target/plan/client-system-plan.xml"/>
            <ant:arg value="${distDir}/bin/client.jar"/>
        </ant:java>

        <j:if test="${context.getVariable('geronimo.assemble.minimal') != 'true'}">
            <j:if test="${context.getVariable('geronimo.assemble.offline') != 'true'}">
                <deploy:startRemoteServer
                    geronimoTarget="${distDir}"
                    vmArgs="-Xmx512m -XX:MaxPermSize=128m -Djava.rmi.server.RMIClassLoaderSpi=org.apache.geronimo.system.rmi.RMIClassLoaderSpiImpl"
                    configs="org/apache/geronimo/RuntimeDeployer"/>
                <ant:echo message="Waiting for server at: ${distDir}"/>
                <deploy:waitForStarted
                    uri="deployer:geronimo:jmx:rmi://localhost/jndi/rmi:/JMXConnector"
                    username="system"
                    password="manager"
                    id="org/apache/geronimo/RuntimeDeployer"/>
                <echo message="server has started"/>
            </j:if>

            <!-- building tranql connector default database configuration-->
            <ant:echo>Building default database configuration</ant:echo>
            <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
                <ant:jvmarg value="-ea"/>
                <ant:arg value="--user"/>
                <ant:arg value="system"/>
                <ant:arg value="--password"/>
                <ant:arg value="manager"/>
                <ant:arg value="distribute"/>
                <ant:arg value="target/plan/default-database-plan.xml"/>
                <ant:arg value="${maven.repo.local}/tranql/rars/tranql-connector-${tranql_connector_version}.rar"/>
            </ant:java>

            <!-- building system database configuration-->
            <ant:echo>Building system database configuration</ant:echo>
            <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
                <ant:jvmarg value="-ea"/>
                <ant:arg value="--user"/>
                <ant:arg value="system"/>
                <ant:arg value="--password"/>
                <ant:arg value="manager"/>
                <ant:arg value="distribute"/>
                <ant:arg value="target/plan/system-database-plan.xml"/>
                <ant:arg value="${maven.repo.local}/geronimo/rars/geronimo-derby-connector-${pom.currentVersion}.rar"/>
            </ant:java>

            <!-- building system activemq configuration-->
            <ant:echo>Building system activemq configuration</ant:echo>
            <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
                <ant:jvmarg value="-ea"/>
                <ant:arg value="--user"/>
                <ant:arg value="system"/>
                <ant:arg value="--password"/>
                <ant:arg value="manager"/>
                <ant:arg value="distribute"/>
                <ant:arg value="target/plan/system-activemq-plan.xml"/>
            </ant:java>

            <!-- building system jms configuration-->
            <ant:echo>Building system jms configuration</ant:echo>
            <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
                <ant:jvmarg value="-ea"/>
                <ant:arg value="--user"/>
                <ant:arg value="system"/>
                <ant:arg value="--password"/>
                <ant:arg value="manager"/>
                <ant:arg value="distribute"/>
                <ant:arg value="target/plan/system-jms-plan.xml"/>
                <ant:arg value="${maven.repo.local}/activemq/rars/activemq-ra-${activemq_version}.rar"/>
            </ant:java>

            <!-- build the spring runtime configuration -->
            <ant:echo>Building spring runtime configuration</ant:echo>
            <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
                <ant:jvmarg value="-ea"/>
                <ant:arg value="--user"/>
                <ant:arg value="system"/>
                <ant:arg value="--password"/>
                <ant:arg value="manager"/>
                <ant:arg value="distribute"/>
                <ant:arg value="target/plan/spring-runtime-plan.xml"/>
            </ant:java>
            <!-- build the spring deployer configuration -->
            <ant:echo>Building spring deployer configuration</ant:echo>
            <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
                <ant:jvmarg value="-ea"/>
                <ant:arg value="--user"/>
                <ant:arg value="system"/>
                <ant:arg value="--password"/>
                <ant:arg value="manager"/>
                <ant:arg value="distribute"/>
                <ant:arg value="target/plan/spring-deployer-plan.xml"/>
            </ant:java>

            <!-- build the J2EEServer secure configuration -->
            <ant:echo>Building secure server configuration</ant:echo>
            <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
                <ant:jvmarg value="-ea"/>
                <ant:arg value="--user"/>
                <ant:arg value="system"/>
                <ant:arg value="--password"/>
                <ant:arg value="manager"/>
                <ant:arg value="distribute"/>
                <ant:arg value="target/plan/j2ee-secure-plan.xml"/>
            </ant:java>

            <!-- build the J2EE client configuration -->
            <ant:echo>Building J2EE Client configuration</ant:echo>
            <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
                <ant:jvmarg value="-ea"/>
                <ant:arg value="--user"/>
                <ant:arg value="system"/>
                <ant:arg value="--password"/>
                <ant:arg value="manager"/>
                <ant:arg value="distribute"/>
                <ant:arg value="target/plan/j2ee-client-plan.xml"/>
            </ant:java>

            <!-- build the J2EEServer with Apache Tomcat (as the web container) configuration -->
            <ant:echo>Building Apache Tomcat server configuration</ant:echo>
            <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
                <ant:jvmarg value="-ea"/>
                <ant:arg value="--user"/>
                <ant:arg value="system"/>
                <ant:arg value="--password"/>
                <ant:arg value="manager"/>
                <ant:arg value="distribute"/>
                <ant:arg value="target/plan/j2ee-server-tomcat-plan.xml"/>
            </ant:java>

            <ant:copy todir="${distDir}/var/catalina/conf" file="${project.root}/modules/tomcat/src/var/web.xml"/>

            <!-- build the Demo configuration -->
            <ant:echo>Building demo website configuration</ant:echo>
            <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
                <ant:jvmarg value="-ea"/>
                <ant:arg value="--user"/>
                <ant:arg value="system"/>
                <ant:arg value="--password"/>
                <ant:arg value="manager"/>
                <ant:arg value="distribute"/>
                <ant:arg value="${maven.repo.local}/geronimo/wars/geronimo-demo-${pom.currentVersion}.war"/>
            </ant:java>

            <!-- build the Debug Tool configuration "org/apache/geronimo/DebugConsole"-->
            <ant:echo>Building debug tool configuration</ant:echo>
            <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
                <ant:jvmarg value="-ea"/>
                <ant:arg value="--user"/>
                <ant:arg value="system"/>
                <ant:arg value="--password"/>
                <ant:arg value="manager"/>
                <ant:arg value="distribute"/>
                <ant:arg value="${maven.repo.local}/geronimo/wars/geronimo-jmxdebug-${pom.currentVersion}.war"/>
            </ant:java>

            <!-- build the remote class loading deployer configuration "org/apache/geronimo/RemoteClassLoadingDeployer"-->
            <ant:echo>Building remote class loading deployer configuration</ant:echo>
            <ant:java fork="true" jar="${distDir}/bin/deployer.jar" failonerror="true">
                <ant:jvmarg value="-ea"/>
                <ant:arg value="--user"/>
                <ant:arg value="system"/>
                <ant:arg value="--password"/>
                <ant:arg value="manager"/>
                <ant:arg value="distribute"/>
                <ant:arg value="target/plan/j2ee-remote-classloading-deployer-plan.xml"/>
            </ant:java>

            <j:if test="${context.getVariable('geronimo.assemble.offline') != 'true'}">
                <deploy:stopRemoteServer
                    uri="deployer:geronimo:jmx:rmi://localhost/jndi/rmi:/JMXConnector"
                    username="system"
                    password="manager"/>
                <echo message="server has stopped"/>
                <!-- re-copy in persistent config list -->
                <echo message="refreshing persistent configuration list"/>
                <ant:copy todir="${distDir}/var" overwrite="true">
                    <ant:fileset dir="src/var">
                        <include name="config/config.list"/>
                    </ant:fileset>
                </ant:copy>
            </j:if>
        </j:if>
    </goal>

    <goal name="cli">

        <!-- build the cli deployer archive -->
        <ant:echo>Building the Command Line Deployer archive</ant:echo>
        <j:set var="cliLibDir" value="cli-deployer-lib"/>
        <j:set var="cliLib" value="${distDir}/${cliLibDir}"/>
        <ant:mkdir dir="${cliLib}"/>
        <j:forEach var="artifact" items="${pom.artifacts}">
            <j:set var="dependency" value="${artifact.dependency}"/>
            <j:if test="${dependency.getProperty('clideployer') == 'true'}">
                <ant:copy todir="${cliLib}" file="${artifact.path}"/>
                <j:set var="clideployer.classpath" value="${clideployer.classpath} ../${cliLibDir}/${artifact.name}"/>
            </j:if>
        </j:forEach>
        <j:set var="cliDeployer" value="${basedir}/target/geronimo-cli-deployer"/>
        <ant:mkdir dir="${cliDeployer}/jar/META-INF"/>
        <ant:manifest file="${cliDeployer}/MANIFEST.MF">
            <ant:attribute name="Main-Class" value="org.apache.geronimo.console.cli.Deployer"/>
            <ant:attribute name="Class-Path" value="${clideployer.classpath}"/>
        </ant:manifest>
        <ant:jar basedir="${cliDeployer}/jar"
            destfile="${distDir}/bin/cli-deployer.jar"
            manifest="${cliDeployer}/MANIFEST.MF"/>

    </goal>
    <!--
        <goal name="startdb">

            <deploy:distribute
                uri="deployer:geronimo:jmx:rmi://localhost/jndi/rmi:/JMXConnector"
                username="system"
                password="manager"
		module="${maven.repo.local}/tranql/rars/tranql-connector-${tranql_connector_version}.rar"
                plan="target/plan/default-database-plan.xml"
                />
            <deploy:start
                uri="deployer:geronimo:jmx:rmi://localhost/jndi/rmi:/JMXConnector"
                username="system"
                password="manager"
                id="org/apache/geronimo/DefaultDatabase"/>
        </goal>
        <goal name="stopdb">
            <deploy:stop
                uri="deployer:geronimo:jmx:rmi://localhost/jndi/rmi:/JMXConnector"
                username="system"
                password="manager"
                id="org/apache/geronimo/DefaultDatabase"/>
            <ant:echo>undeploy</ant:echo>
            <deploy:undeploy
                uri="deployer:geronimo:jmx:rmi://localhost/jndi/rmi:/JMXConnector"
                username="system"
                password="manager"
                id="org/apache/geronimo/DefaultDatabase"/>
        </goal-->

</project>
